---

- hosts: localhost
  become: true
  vars_files:
    - vars.yml


  tasks:

  - name: Collect the list of installed Elasticsearch plugins
    command: /usr/share/elasticsearch/bin/elasticsearch-plugin list
    register: elasticsearch_plugins

  - name: Stop Elasticsearch
    service: name=elasticsearch state=stopped
    when: "'x-pack' not in elasticsearch_plugins.stdout"

  - name: Add X-Pack to Elasticsearch
    command: /usr/share/elasticsearch/bin/elasticsearch-plugin install file:///opt/x-pack.zip --batch
    when: "'x-pack' not in elasticsearch_plugins.stdout"

  - name: Start Elasticsearch
    service: name=elasticsearch state=started
    when: "'x-pack' not in elasticsearch_plugins.stdout"

  - name: Wait for Elasticsearch to become available
    wait_for:
      port: 9200
      delay: 5

  - name: Set the password for the elastic system user
    command: >
      curl -XPUT 'http://localhost:9200/_xpack/security/user/elastic/_password' -H "Content-Type: application/json" -d '{
          "password": "{{ elastic_password }}"
      }'

  - name: Set the password for the kibana system user
    command: >
      curl -XPUT 'http://localhost:9200/_xpack/security/user/kibana/_password' -H "Content-Type: application/json" -d '{
          "password": "{{ elastic_password }}"
      }'

  - name: Set the password for the logstash_system system user
    command: >
      curl -XPUT 'http://localhost:9200/_xpack/security/user/logstash_system/_password' -H "Content-Type: application/json" -d '{
          "password": "{{ elastic_password }}"
      }'


  - name: Stop Logstash
    service: name=logstash state=stopped

  - name: Add X-Pack to Logstash
    command: ./bin/logstash-plugin install file:///opt/x-pack.zip
    args:
      chdir: /usr/share/logstash/

  - name: Start Logstash
    service: name=logstash state=started


  - name: Collect the list of installed Kibana plugins
    command: /usr/share/kibana/bin/kibana-plugin list
    register: kibana_plugins

  - name: Stop Kibana
    service: name=kibana state=stopped
    when: "'x-pack' not in kibana_plugins.stdout"

  - name: Add X-Pack to Kibana
    command: /usr/share/kibana/bin/kibana-plugin install file:///opt/x-pack.zip
    when: "'x-pack' not in kibana_plugins.stdout"

  - name: Set the password for the kibana user
    lineinfile:
      dest: /etc/kibana/kibana.yml
      regexp: "^elasticsearch.password"
      line: "elasticsearch.password: {{ elastic_password }}"
      state: present

  - name: Start Kibana
    service: name=kibana state=restarted


  - name: Read the original Logstash output so this playbook can be run multiple times
    template: src=templates/elasticsearch-output.conf dest=/etc/logstash/conf.d/20-elasticsearch-output.conf

  - name: Set the user in the Logstash to Elasticsearch output
    blockinfile:
      dest: /etc/logstash/conf.d/20-elasticsearch-output.conf
      insertafter: '^    hosts =>'
      content: |
          user => "elastic"
          password => "{{ elastic_password }}"

  - name: Set the password for the logstash_system user
    lineinfile:
      dest: /etc/logstash/logstash.yml
      regexp: "^xpack.monitoring.elasticsearch.password"
      line: "xpack.monitoring.elasticsearch.password: {{ elastic_password }}"
      state: present

  - name: Restart Logstash
    service: name=logstash state=restarted


  - name: Read the original Auditbeat configuration so this playbook can be run multiple times
    template: src=templates/auditbeat.yml dest=/etc/auditbeat/auditbeat.yml

  - name: Set the Elasticsearch user in the Auditbeat configuration
    blockinfile:
      dest: /etc/auditbeat/auditbeat.yml
      insertafter: '^  hosts: ["http://localhost:9200"]'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Set the Kibana user in the Auditbeat configuration
    blockinfile:
      dest: /etc/auditbeat/auditbeat.yml
      insertafter: '^  host: "localhost:5601"'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Restart Auditbeat
    service: name=auditbeat state=restarted


  - name: Read the original Filebeat configuration so this playbook can be run multiple times
    template: src=templates/filebeat.yml dest=/etc/filebeat/filebeat.yml

  - name: Set the Elasticsearch user in the Filebeat configuration
    blockinfile:
      dest: /etc/filebeat/filebeat.yml
      insertafter: '^  hosts: ["http://localhost:9200"]'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Set the Kibana user in the Filebeat configuration
    blockinfile:
      dest: /etc/filebeat/filebeat.yml
      insertafter: '^  host: "localhost:5601"'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Restart Filebeat
    service: name=filebeat state=restarted


  - name: Read the original Heartbeat configuration so this playbook can be run multiple times
    template: src=templates/heartbeat.yml dest=/etc/heartbeat/heartbeat.yml

  - name: Set the Elasticsearch user in the Heartbeat configuration
    blockinfile:
      dest: /etc/heartbeat/heartbeat.yml
      insertafter: '^  hosts: ["http://localhost:9200"]'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Set the Kibana user in the Heartbeat configuration
    blockinfile:
      dest: /etc/heartbeat/heartbeat.yml
      insertafter: '^  host: "localhost:5601"'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Restart Heartbeat
    service: name=heartbeat-elastic state=restarted


  - name: Read the original Metricbeat configuration so this playbook can be run multiple times
    template: src=templates/metricbeat.yml dest=/etc/metricbeat/metricbeat.yml

  - name: Set the Elasticsearch user in the Metricbeat configuration
    blockinfile:
      dest: /etc/metricbeat/metricbeat.yml
      insertafter: '^  hosts: ["http://localhost:9200"]'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Set the Kibana user in the Metricbeat configuration
    blockinfile:
      dest: /etc/metricbeat/metricbeat.yml
      insertafter: '^  host: "localhost:5601"'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Restart Metricbeat
    service: name=metricbeat state=restarted


  - name: Read the original Packetbeat configuration so this playbook can be run multiple times
    template: src=templates/packetbeat.yml dest=/etc/packetbeat/packetbeat.yml
    vars:
      output: redis

  - name: Set the Kibana user in the Packetbeat configuration; no Elasticsearch user since Packetbeat is talking to Redis
    blockinfile:
      dest: /etc/packetbeat/packetbeat.yml
      insertafter: '^  host: "localhost:5601"'
      content: |
        username: "elastic"
        password: "{{ elastic_password }}"

  - name: Restart Packetbeat
    service: name=packetbeat state=restarted
